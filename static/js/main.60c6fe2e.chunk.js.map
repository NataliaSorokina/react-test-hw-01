{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendListItem.module.css","components/Statistic/Statistics.module.css","components/Statistic/StatisticsList.module.css","components/FriendList/FriendList.module.css","components/Statistic/Section.module.css","components/TransactionHistory/TransactionHistory.module.css","App.module.css","components/Profile/Profile.js","components/Statistic/Statistics.js","components/Statistic/getrandomNumber.js","components/Statistic/StatisticsList.js","components/Statistic/Section.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistoryRecord.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","props","avatar","name","tag","location","followers","views","likes","className","styles","profile","description","src","alt","stats","items","label","quantity","Statistics","percentage","getRandomNumber","min","max","Math","ceil","random","StatisticsList","statList","map","stat","item","style","backgroundColor","id","Section","title","children","statistics","FriendListItem","isOnline","status","width","FriendList","friends","list","friend","TransactionHistoryRecord","type","amount","currency","TransactionHistory","history","App","container","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60c6fe2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__Xuqkr\",\"description\":\"Profile_description__3wdyY\",\"avatar\":\"Profile_avatar__E5bED\",\"name\":\"Profile_name__-P7dv\",\"tag\":\"Profile_tag__1-5pf\",\"location\":\"Profile_location__31--4\",\"stats\":\"Profile_stats__sH85Q\",\"items\":\"Profile_items__2gwTa\",\"label\":\"Profile_label__2S_HM\",\"quantity\":\"Profile_quantity__3Xi7Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"FriendListItem_status__tiUAE\",\"true\":\"FriendListItem_true__CFjVd\",\"false\":\"FriendListItem_false__3BICY\",\"name\":\"FriendListItem_name___J7iL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Statistics_label__14Z1Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"StatisticsList_statList__j_ujy\",\"item\":\"StatisticsList_item__3ZSzV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendList_list__1KpkB\",\"item\":\"FriendList_item__2sT5N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Section_statistics__14-1D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__1HiXx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__18PI_\"};","// import ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nfunction Profile(props) {\n  const { avatar, name, tag, location, followers, views, likes } = props;\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img src={avatar} alt={name} className={styles.avatar} />\n        <p className={styles.name}>{name}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li className={styles.items}>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{followers}</span>\n        </li>\n        <li className={styles.items}>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}> {views}</span>\n        </li>\n        <li className={styles.items}>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}> {likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  followers: PropTypes.number.isRequired,\n  views: PropTypes.number.isRequired,\n  likes: PropTypes.number.isRequired,\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nfunction Statistics(props) {\n  const { label, percentage } = props;\n  return (\n    <>\n      <span className={styles.label}>{label}</span>\n      <span className={styles.percentage}>{percentage}%</span>\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  label: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","function getRandomNumber(min, max) {\n  return Math.ceil(Math.random() * (max - min) + min);\n}\nexport default getRandomNumber;\n","import Statistics from './Statistics';\nimport styles from './StatisticsList.module.css';\nimport getRandomNumber from './getrandomNumber';\n// import stats from '../'\nimport PropTypes from 'prop-types';\n\nfunction StatisticsList({ stats }) {\n  return (\n    <ul className={styles.statList}>\n      {stats.map(stat => (\n        <li\n          key={stat.id}\n          className={styles.item}\n          style={{\n            backgroundColor: `rgb(${getRandomNumber(0, 255)}, ${getRandomNumber(\n              0,\n              255,\n            )}, ${getRandomNumber(0, 255)})`,\n          }}\n        >\n          <Statistics label={stat.label} percentage={stat.percentage} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nStatisticsList.propTypes = {\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default StatisticsList;\n","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={styles.statistics}>\n      {title && <h2>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport styles from './FriendListItem.module.css';\n\nfunction FriendListItem(props) {\n  const { avatar, name, isOnline } = props;\n  return (\n    <>\n      <span className={`${styles.status} ${styles[isOnline]}`}>{isOnline}</span>\n      <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={styles.name}>{name}</p>\n    </>\n  );\n}\n\nFriendListItem.propTypes = {\n  isOnline: PropTypes.bool.isRequired,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default FriendListItem;\n","import FriendListItem from './FriendListItem';\nimport styles from './FriendList.module.css';\nimport PropTypes from 'prop-types';\n\nfunction FriendList({ friends }) {\n  return (\n    <ul className={styles.list}>\n      {friends.map(friend => (\n        <li className={styles.item} key={friend.id}>\n          <FriendListItem isOnline={friend.isOnline} avatar={friend.avatar} name={friend.name} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport /* styles from  */ './TransactionHistoryRecord.module.css';\n\nfunction TransactionHistoryRecord(props) {\n  const { type, amount, currency } = props;\n  return (\n    <>\n      <td>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </>\n  );\n}\n\nTransactionHistoryRecord.propTypes = {\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n\nexport default TransactionHistoryRecord;\n","import PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\nimport TransactionHistoryRecord from 'components/TransactionHistory/TransactionHistoryRecord';\n\nfunction TransactionHistory({ items }) {\n  return (\n    <table className={styles.history}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id}>\n            <TransactionHistoryRecord\n              type={item.type}\n              amount={item.amount}\n              currency={item.currency}\n            />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","// import logo from './logo.svg';\nimport user from './json/user.json';\nimport statisticalData from './json/statistical-data.json';\nimport friends from './json/friends.json';\nimport transactions from './json/transactions.json';\nimport Profile from 'components/Profile/Profile';\nimport StatisticsList from 'components/Statistic/StatisticsList';\nimport Section from 'components/Statistic/Section';\nimport FriendList from 'components/FriendList/FriendList';\nimport TransactionHistory from 'components/TransactionHistory/TransactionHistory';\nimport styles from './App.module.css';\n\nfunction App() {\n  return (\n    <div className={styles.container}>\n      <Profile\n        avatar={user.avatar}\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        followers={user.stats.followers}\n        views={user.stats.views}\n        likes={user.stats.likes}\n      />\n      <Section title=\"Upload stats\">\n        <StatisticsList stats={statisticalData} />\n        {/* <Statistics stats={statisticalData} />; */}\n      </Section>\n\n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n// import Profile from 'components/Profile/Profile.js';\n\nReactDOM.render(\n  // <Profile />,\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}